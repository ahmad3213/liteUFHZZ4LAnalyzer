<flags ADD_SUBDIR="1" />

<flags FFLAGS="-O3 -ffree-form -ffree-line-length-none -Dcompiler=2 -Dmela -fno-automatic -fno-f2c  -fPIC -g"/>
<flags CPPFLAGS="-I$(CMSSW_BASE)/src/ZZMatrixElement/MELA/interface/" />
<flags CPPDEFINES="_melapkgpath_=$(CMSSW_BASE)/src/ZZMatrixElement/MELA/" />
<!--Some magic to retrieve the mcfm library over http, and link it hardcoding its path in the resulting library, so that LD_LIBRARY_PATH is not required. -->
<flags LDFLAGS="-Wl,-rpath=$(CMSSW_BASE)/src/ZZMatrixElement/MELA/data/$(SCRAM_ARCH) $(shell $(CMSSW_BASE)/src/ZZMatrixElement/MELA/data/retrieve.csh $(SCRAM_ARCH) mcfm_703) -L$(CMSSW_BASE)/src/ZZMatrixElement/MELA/data/$(SCRAM_ARCH) -lmcfm_703 -ljhugenmela" />

<use name="f77compiler"/>
<use name="boost"/>
<use name="boost_filesystem"/>
<use name="root"/>
<use name="rootmath"/>
<use name="roofit"/>
<use name="roofitcore"/>
<use name="CLHEP"/>

<export>
  <lib name="1"/>
  <use name="mcfm_703"/>   <!--For this to work, one needs to specify mcfm as a scram tool.-->
</export>

<export>
  <lib name="1"/>
  <use name="jhugenmela"/>   <!--For this to work, one needs to specify mcfm as a scram tool.-->
</export>
